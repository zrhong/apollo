<?xml version="1.0"  encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>com.ctrip.framework.apollo</groupId>
		<artifactId>apollo</artifactId>
		<version>1.3.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>apollo-configservice</artifactId>
	<name>Apollo ConfigService</name>
	<properties>
		<github.path>${project.artifactId}</github.path>
	</properties>
	<dependencies>
		<!-- apollo -->
		<dependency>
			<groupId>com.ctrip.framework.apollo</groupId>
			<artifactId>apollo-biz</artifactId>
		</dependency>
		<!-- end of apollo -->
		<!-- eureka -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>spring-cloud-starter-netflix-archaius</artifactId>
					<groupId>org.springframework.cloud</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
					<groupId>org.springframework.cloud</groupId>
				</exclusion>
				<exclusion>
					<artifactId>ribbon-eureka</artifactId>
					<groupId>com.netflix.ribbon</groupId>
				</exclusion>
				<exclusion>
					<artifactId>aws-java-sdk-core</artifactId>
					<groupId>com.amazonaws</groupId>
				</exclusion>
				<exclusion>
					<artifactId>aws-java-sdk-ec2</artifactId>
					<groupId>com.amazonaws</groupId>
				</exclusion>
				<exclusion>
					<artifactId>aws-java-sdk-autoscaling</artifactId>
					<groupId>com.amazonaws</groupId>
				</exclusion>
				<exclusion>
					<artifactId>aws-java-sdk-sts</artifactId>
					<groupId>com.amazonaws</groupId>
				</exclusion>
				<exclusion>
					<artifactId>aws-java-sdk-route53</artifactId>
					<groupId>com.amazonaws</groupId>
				</exclusion>
				<!-- duplicated with spring-security-core -->
				<exclusion>
					<groupId>org.springframework.security</groupId>
					<artifactId>spring-security-crypto</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- end of eureka -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<!-- 生成MANIFEST.MF的设置 -->
						<manifest>
							<!-- 为依赖包添加路径, 这些路径会写在MANIFEST文件的Class-Path下 -->
							<addClasspath>true</addClasspath>
							<!--<classpathPrefix></classpathPrefix> -->
							<!-- jar启动入口类 -->
							<mainClass>com.ctrip.framework.apollo.configservice.ConfigServiceApplication</mainClass>
						</manifest>
						<manifestEntries>
							<!-- 在Class-Path下添加配置文件的路径 -->
							<!--<Class-Path>config/</Class-Path>-->
						</manifestEntries>
					</archive>

					<includes>
						<!-- 打jar包时，只打包class文件 -->
						<include>**/*.class</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<imageName>${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>*.zip</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<!--<finalName>${project.artifactId}-${project.version}-${package.environment}</finalName>-->
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assemble/assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
